name: CI/CD Pipeline for Terraform, Ansible, and Docker

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the 'main' branch.
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the 'main' branch.

jobs:
  # Terraform Job
  terraform:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write  # Required for AWS credentials
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update
          sudo apt-get install terraform

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve

      - name: Output EC2 Instance IP
        id: terraform-output
        run: |
          echo "vm_ip=$(terraform output -raw vm_ip)" >> $GITHUB_OUTPUT

      - name: Debug EC2 Instance IP
        run: echo "EC2 Instance IP: ${steps.terraform-output.outputs.vm_ip}"

  # Ansible Job
  ansible:
    runs-on: ubuntu-latest
    needs: terraform  # Ensures the Terraform job runs first
    permissions:
      id-token: write  # Required for AWS credentials
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS
